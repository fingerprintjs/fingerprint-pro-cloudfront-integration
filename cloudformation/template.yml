AWSTemplateFormatVersion: '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31
Description: Fingerprint Pro Lambda@Edge function for CloudFront integration
Parameters:
  DistributionId:
    Description: CloudFront distribution ID. Leave it empty to create a new distribution
    Default: ""
    Type: String
  FpjsBehaviorPath:
    AllowedPattern: ^([a-zA-Z0-9\-])+$
    Description: FPJS_BEHAVIOR_PATH value
    Type: String
  FpjsGetResultPath:
    AllowedPattern: ^([a-zA-Z0-9\-])+$
    Description: FPJS_GET_RESULT_PATH value
    Type: String
  FpjsAgentDownloadPath:
    AllowedPattern: ^([a-zA-Z0-9\-])+$
    Description: FPJS_AGENT_DOWNLOAD_PATH value
    Type: String
  FpjsPreSharedSecret:
    AllowedPattern: ^([a-zA-Z0-9\-])+$
    Description: FPJS_PRE_SHARED_SECRET value
    Type: String
    NoEcho: true
  DomainNames:
    Description: (Optional) Domain names to attach to CloudFront distribution. Several domains names should be separated by plus sign (domain1.com+domain2.com)
    Default: ""
    Type: String
  ACMCertificateARN:
    Description: (Optinal) ARN of SSL certificate in AWS Certificate Manager (the certificate could be requested in the AWS Certifucate Manager or uploaded from the third-party service to AWS).
    Default: ""
    Type: String

Conditions:
  CreateCloudFrontDistribution:
    !Equals [!Ref DistributionId, ""]
  AttachDomainToCloudFront: !And
    - !Not [!Equals [!Ref DomainNames, ""]]
    - !Not [!Equals [!Ref ACMCertificateARN, ""]]

Resources:
  ## Lambda@Edge function for Fingerprint Pro integration

  FingerprintIntegrationSettingsSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: AWS Secret with a custom Fingerprint integration settings
      Name: !Join ['-', ['fingerprint-pro-cloudfront-integration-settings-secret', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
      SecretString:
        !Join
          - ''
          - - '{'
            - !Join
                - ','
                - - !Join
                      - ':'
                      - - '"fpjs_behavior_path"'
                        - !Sub
                            - '"${value}"'
                            - value: !Ref FpjsBehaviorPath
                  - !Join
                      - ':'
                      - - '"fpjs_get_result_path"'
                        - !Sub
                            - '"${value}"'
                            - value: !Ref FpjsGetResultPath
                  - !Join
                      - ':'
                      - - '"fpjs_agent_download_path"'
                        - !Sub
                            - '"${value}"'
                            - value: !Ref FpjsAgentDownloadPath
                  - !Join
                      - ':'
                      - - '"fpjs_pre_shared_secret"'
                        - !Sub
                            - '"${value}"'
                            - value: !Ref FpjsPreSharedSecret
            - '}'

  FpIntLambdaFunctionExecutionRole:
    Type: AWS::IAM::Role
    DependsOn:
      - FingerprintIntegrationSettingsSecret
    Metadata:
      SamResourceId: FpIntLambdaFunctionExecutionRole
    Properties:
      Description: Lambda@Edge function execution role
      RoleName: !Join ['-', ['fingerprint-pro-lambda-role', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service:
              - lambda.amazonaws.com
              - edgelambda.amazonaws.com
      Policies:
      - PolicyName: LambdaExecutionPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
      - PolicyName: AWSSecretAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource: !Ref FingerprintIntegrationSettingsSecret
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  FingerprintProCloudFrontLambda:
    Type: AWS::Serverless::Function
    DependsOn:
      - FpIntLambdaFunctionExecutionRole
    Properties:
      Description: Lambda@Edge function definition
      FunctionName: !Join ['-', ['fingerprint-pro-cloudfront-lambda', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
      Handler: fingerprintjs-pro-cloudfront-lambda-function.handler
      Runtime: nodejs20.x
      CodeUri: s3://fingerprint-pro-cloudfront-integration-lambda-function/releaseV2/lambda_latest.zip
      MemorySize: 128
      Timeout: 10
      Role: !GetAtt FpIntLambdaFunctionExecutionRole.Arn

  FingerprintProCloudFrontLambdaVersion:
    Type: AWS::Lambda::Version
    DependsOn:
      - FingerprintProCloudFrontLambda
    Properties:
      FunctionName: !Ref FingerprintProCloudFrontLambda
      Description: Lambda@Edge function definition

  ## CloudFront distribution and related settings

  FingerprintProCDNCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: !Join [ '-', ['FingerprintProCDNCachePolicy', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
        MinTTL: 0
        MaxTTL: 180
        DefaultTTL: 180
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: whitelist
            QueryStrings:
              - version
              - loaderVersion
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Condition: CreateCloudFrontDistribution
    Properties:
      DistributionConfig:
        Aliases:
          !If
          - AttachDomainToCloudFront
          - !Split ['+', !Ref DomainNames]
          - !Ref AWS::NoValue
        ViewerCertificate:
          !If
          - AttachDomainToCloudFront
          - AcmCertificateArn: !Ref ACMCertificateARN
            MinimumProtocolVersion: TLSv1.2_2018
            SslSupportMethod: sni-only
          - !Ref AWS::NoValue
        DefaultCacheBehavior:
          AllowedMethods:
              - HEAD
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
          CachePolicyId: !Ref FingerprintProCDNCachePolicy
          Compress: true
          LambdaFunctionAssociations:
            - EventType: origin-request
              IncludeBody: true
              LambdaFunctionARN: !Ref FingerprintProCloudFrontLambdaVersion                
          OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3 # Default AllViewer policy
          SmoothStreaming: false
          TargetOriginId: fpcdn.io
          ViewerProtocolPolicy: https-only
        Enabled: true
        Origins:
          - Id: fpcdn.io
            DomainName: fpcdn.io
            OriginCustomHeaders:
              - HeaderName: FPJS_SECRET_NAME
                HeaderValue: !Ref FingerprintIntegrationSettingsSecret
              # Enabled debug logging in Lambda@Edge function. Should be disabled in production env
              - HeaderName: FPJS_DEBUG
                HeaderValue: true
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: https-only
              OriginReadTimeout: 30
        PriceClass: PriceClass_100

  ## Management Lambda function (responsible for switching CloudFront distribution to the new Fingerprint Pro Lambda@Edge version)

  FpMgmtLambdaFunctionExecutionRole:
    Type: AWS::IAM::Role
    DependsOn:
      - MgmtSettingsSecret
    Metadata:
      SamResourceId: FpMgmtLambdaFunctionExecutionRole
    Properties:
      Description: Management Lambda execution role
      RoleName: !Join ['-', ['fingerprint-pro-lambda-mgmt-role', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service:
              - lambda.amazonaws.com
      Policies:
      - PolicyName: LogsPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
      - PolicyName: AWSSecretAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              Fn::Sub: ${MgmtSettingsSecret}
      - PolicyName: S3LambdaDistributionAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
            Resource: arn:aws:s3:::fingerprint-pro-cloudfront-integration-lambda-function/releaseV2/lambda_latest.zip
      - PolicyName: FpLambdaUpdate
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - lambda:ListVersionsByFunction
              - lambda:GetFunction
              - lambda:GetFunctionConfiguration
              - lambda:EnableReplication
              - lambda:UpdateFunctionCode
              - lambda:PublishVersion
            Resource:
              - !Join
                  - ''
                  - - !Sub 'arn:aws:lambda:*:${AWS::AccountId}:function:'
                    - 'fingerprint-pro-cloudfront-lambda-'
                    - !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]
                    - ':*'
              - !Join
                  - ''
                  - - !Sub 'arn:aws:lambda:*:${AWS::AccountId}:function:'
                    - 'fingerprint-pro-cloudfront-lambda-'
                    - !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]
      - PolicyName: CloudFrontUpdate
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - cloudfront:GetDistribution
              - cloudfront:UpdateDistribution
              - cloudfront:GetDistributionConfig
              - cloudfront:CreateInvalidation
            Resource: !Join ['', [!Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/', !If [CreateCloudFrontDistribution, !Ref CloudFrontDistribution, !Ref DistributionId]]]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  MgmtSettingsSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Join ['-', ['fingerprint-pro-mgmt-settings-secret', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
      GenerateSecretString:
        IncludeSpace: false
        ExcludePunctuation: true
        PasswordLength: 30
        GenerateStringKey: token
        SecretStringTemplate: !Sub '{}'

  FingerprintProMgmtLambda:
    Type: AWS::Serverless::Function
    DependsOn:
      - FpMgmtLambdaFunctionExecutionRole
      - MgmtSettingsSecret
    Properties:
      FunctionName: !Join ['-', ['fingerprint-pro-mgmt-lambda', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
      Handler: fingerprintjs-pro-cloudfront-mgmt-lambda-function.handler
      Runtime: nodejs20.x
      CodeUri: s3://fingerprint-pro-cloudfront-integration-lambda-function/releaseV2/mgmt_lambda_latest.zip
      MemorySize: 128
      Timeout: 120
      Role: !GetAtt FpMgmtLambdaFunctionExecutionRole.Arn
      Environment:
        Variables:
          SettingsSecretName: !Ref MgmtSettingsSecret
          LambdaFunctionName: !Ref FingerprintProCloudFrontLambda
          LambdaFunctionArn: !GetAtt FingerprintProCloudFrontLambda.Arn
          CFDistributionId: !If [CreateCloudFrontDistribution, !Ref CloudFrontDistribution, !Ref DistributionId]

  MgmtFunctionURL:
    Type: AWS::Lambda::Url
    DependsOn:
      - FingerprintProMgmtLambda
    Properties:
      AuthType: NONE
      TargetFunctionArn: !GetAtt FingerprintProMgmtLambda.Arn

  MgmtFunctionInvokePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - FingerprintProMgmtLambda
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName: !Ref FingerprintProMgmtLambda
      FunctionUrlAuthType: NONE
      Principal: "*"


Outputs:
  LambdaFunctionName:
    Description: Fingerprint Pro Lambda function name
    Value:
      Ref: FingerprintProCloudFrontLambda
    Export:
      Name: !Join ['-', ['fingerprint-pro-cloudfront-lambda', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
  LambdaFunctionVersion:
    Description: Fingerprint Pro Lambda function version
    Value:
      Ref: FingerprintProCloudFrontLambdaVersion
    Export:
      Name: !Join ['-', ['fingerprint-pro-cloudfront-lambda-version', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
  CachePolicyName:
    Description: Cache policy name
    Value:
      Ref: FingerprintProCDNCachePolicy
    Export:
      Name: !Join [ '-', ['FingerprintProCDNCachePolicy', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
  CloudFrontDistributionId:
    Description: CloudFront distribution Id used in the integration settings
    Value:
      Fn::If: [CreateCloudFrontDistribution, !Ref CloudFrontDistribution, !Ref DistributionId]
    Export:
      Name: !Join ['-', ['fingerprint-pro-cloudfront-distribution', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
  IsCloudFrontDistributionCreatedByDeployment:
    Description: Indicate if the CloudFront distribution with attached Lambda function was created by deployment or not (depends on initial parameters)
    Value:
      Fn::If: [CreateCloudFrontDistribution, "true", "false"]
    Export:
      Name: !Join ['-', ['is-cloudfront-distribution-created-by-deployment', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
  FingerprintProMgmtLambda:
    Description: Fingerprint Pro Lambda management function name
    Value:
      Ref: FingerprintProMgmtLambda
    Export:
      Name: !Join ['-', ['fingerprint-pro-mgmt-lambda', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
  MgmtLambdaFunctionUrl:
    Description: Fingerprint Pro management Lambda function's public URL
    Value:
      Fn::GetAtt: MgmtFunctionURL.FunctionUrl
    Export:
      Name: !Join ['-', ['fingerprint-pro-mgmt-lambda-url', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
  FingerprintIntegrationSettingsSecret:
    Description: Fingerprint Pro CloudFront integration settings secret
    Value:
      Ref: FingerprintIntegrationSettingsSecret
    Export:
      Name: !Join ['-', ['fingerprint-pro-cloudfront-integration-settings-secret', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
  MgmtSettingsSecret:
    Description: Fingerprint Pro Management Lambda settings secret
    Value:
      Ref: MgmtSettingsSecret
    Export:
      Name: !Join ['-', ['fingerprint-pro-mgmt-settings-secret', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
