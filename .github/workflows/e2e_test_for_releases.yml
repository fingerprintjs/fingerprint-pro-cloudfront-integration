name: AWS E2E for releases and pre-releases

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
#  push:
#    tags:
#      - v*

jobs:
  check-changed-files:
    runs-on: ubuntu-20.04
    name: Check changed files
    outputs:
      NEED_TO_RUN_TESTS: ${{ steps.decision.outputs.NEED_TO_RUN_TESTS }}
    steps:
      - name: Git clone
        uses: actions/checkout@v4
      - name: Get changed files
        id: decision
        run: |
          git fetch origin $GITHUB_BASE_REF
          diff=$(git log $GITHUB_BASE_REF..$GITHUB_SHA --oneline --format="%H")
          echo $diff
          needToRunTests=false
          for commit in $diff; do
            tag=$(git tag --points-at "$commit")
            if [[ -n "$tag" ]]; then
              echo COMMIT_WITH_TAG=${commit} >> $GITHUB_OUTPUT    
              needToRunTests=true
            fi
          done
          echo $needToRunTests
          echo NEED_TO_RUN_TESTS=${needToRunTests} >> $GITHUB_OUTPUT

  run-e2e-for-releases-and-pre-releases:
    needs: check-changed-files
    if: needs['check-changed-files'].outputs.NEED_TO_RUN_TESTS == 'true'
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    name: Run e2e for releases and pre-releases
    runs-on: ubuntu-latest
    steps:
      - name: Git clone
        uses: actions/checkout@v4
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 #v4.0.2
        with:
          role-to-assume: ${{secrets.AWS_E2E_ROLE_ARN}}
          aws-region: ${{vars.AWS_E2E_REGION}}
      - name: Trigger AWS CodePipeline
        run: |
          codepipeline_execution_id=$(aws codepipeline start-pipeline-execution --name ${{vars.AWS_E2E_RC_CODEPIPELINE_NAME}} --source-revisions actionName=Source,revisionType=COMMIT_ID,revisionValue=${{env.COMMIT_WITH_TAG}} --query 'pipelineExecutionId' --output text)
          echo "Pipeline execution ID: $codepipeline_execution_id"
          echo "codepipeline_execution_id=$codepipeline_execution_id" >> $GITHUB_ENV
      - name: Poll Pipeline Status
        id: poll-status
        run: |
          while true; do
            sleep 30

            status=$(aws codepipeline get-pipeline-execution \
              --pipeline-name ${{vars.AWS_E2E_RC_CODEPIPELINE_NAME}} \
              --pipeline-execution-id ${{ env.codepipeline_execution_id }} \
              --query 'pipelineExecution.status' --output text)
          
            echo "Current pipeline status: $status"
          
            if [[ "$status" == "Succeeded" ]]; then
              echo "Pipeline execution succeeded!"
              exit 0
            elif [[ "$status" == "Failed" ]]; then
              echo "Pipeline execution failed!"
              exit 1
            fi

          done
      - name: Output Pipeline Link
        if: always()
        run: |
          region=${{ vars.AWS_E2E_REGION }}
          pipeline_name=${{ vars.AWS_E2E_RC_CODEPIPELINE_NAME }}
          execution_id=${{ env.codepipeline_execution_id }}
          pipeline_url="https://${region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${pipeline_name}/executions/${execution_id}?region=${region}"
          echo "AWS CodePipeline Execution URL: $pipeline_url"
          echo "## AWS CodePipeline Execution Link" >> $GITHUB_STEP_SUMMARY
          echo "[$pipeline_url]($pipeline_url)" >> $GITHUB_STEP_SUMMARY
